##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL on an Ubuntu system, creates a database called
# "myapp" and a user called "django" with password "mysupersecretpassword"
# with access to the "myapp" database.
#
---
- name: ensure apt cache is up to date
  apt:
    update_cache: "yes"

- name: ensure postgresql package is installed
  apt:
    name: "postgresql"
    state: "latest"

- name: ensure postgresql headers package is installed
  apt:
    name: "libpq-dev"
    state: "latest"

- name: ensure postgresql-contrib package is installed
  apt:
    name: "postgresql-contrib"
    state: "latest"

- name: install psycopg2 python module
  apt:
    name: "python-psycopg2"
    state: "latest"

- name: ensure database is created
  sudo: yes
  sudo_user: postgres
  postgresql_db:
    name: "{{ dbname }}"
    encoding: "UTF-8"

- name: ensure user has access to database
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    db: "{{ dbname }}"
    name: "{{ dbuser }}"
    password: "{{ dbpassword }}"
    priv: "ALL"

- name: ensure user does not have unnecessary privilege
  sudo: yes
  sudo_user: postgres
  postgresql_user:
    name: "{{ dbuser }}"
    role_attr_flags: "NOSUPERUSER,NOCREATEDB"